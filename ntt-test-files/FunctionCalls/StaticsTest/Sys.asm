// function Sys.init 0      
(Sys.init)
// push constant 6      
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 8      
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class1.set 2      
@2
D=M
@SP
D=M-D
@ARG
M=D
@Class1.set.return.2
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@Class1.set
A=M
0;JMP
(Class1.set.return.2)
// pop temp 0      
@5
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant 23      
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 15      
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// call Class2.set 2      
@2
D=M
@SP
D=M-D
@ARG
M=D
@Class2.set.return.2
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@Class2.set
A=M
0;JMP
(Class2.set.return.2)
// pop temp 0      
@5
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// call Class1.get 0      
@0
D=M
@SP
D=M-D
@ARG
M=D
@Class1.get.return.0
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@Class1.get
A=M
0;JMP
(Class1.get.return.0)
// call Class2.get 0      
@0
D=M
@SP
D=M-D
@ARG
M=D
@Class2.get.return.0
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@LCL
M=D
@Class2.get
A=M
0;JMP
(Class2.get.return.0)
// label WHILE       
(WHILE)
// goto WHILE       
@WHILE
0;JMP
// function Class1.set 0      
(Class1.set)
// push argument 0      
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0      
@Sys.0
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push argument 1      
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1      
@Sys.1
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant 0      
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return        
@LCL
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
AM=M-1
D=M
@THAT
M=D
@R14
AM=M-1
D=M
@THIS
M=D
@R14
AM=M-1
D=M
@ARG
M=D
@R14
AM=M-1
D=M
@LCL
M=D
@R14
AM=M-1
A=M
0;JMP
// function Class1.get 0      
(Class1.get)
// push static 0      
@Sys.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1      
@Sys.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub        
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
// return        
@LCL
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
AM=M-1
D=M
@THAT
M=D
@R14
AM=M-1
D=M
@THIS
M=D
@R14
AM=M-1
D=M
@ARG
M=D
@R14
AM=M-1
D=M
@LCL
M=D
@R14
AM=M-1
A=M
0;JMP
// function Class2.set 0      
(Class2.set)
// push argument 0      
@0
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 0      
@Sys.0
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push argument 1      
@1
D=A
@ARG
A=D+M
D=M
@SP
A=M
M=D
@SP
M=M+1
// pop static 1      
@Sys.1
D=A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push constant 0      
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// return        
@LCL
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
AM=M-1
D=M
@THAT
M=D
@R14
AM=M-1
D=M
@THIS
M=D
@R14
AM=M-1
D=M
@ARG
M=D
@R14
AM=M-1
D=M
@LCL
M=D
@R14
AM=M-1
A=M
0;JMP
// function Class2.get 0      
(Class2.get)
// push static 0      
@Sys.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// push static 1      
@Sys.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub        
@SP
AM=M-1
D=M
@SP
AM=M-1
M=M-D
@SP
M=M+1
// return        
@LCL
D=M
@R14
M=D
@SP
AM=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
AM=M-1
D=M
@THAT
M=D
@R14
AM=M-1
D=M
@THIS
M=D
@R14
AM=M-1
D=M
@ARG
M=D
@R14
AM=M-1
D=M
@LCL
M=D
@R14
AM=M-1
A=M
0;JMP
